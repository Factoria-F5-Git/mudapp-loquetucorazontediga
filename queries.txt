Query #1
    Un cliente puede registrarse en la aplicacion:

> db.usuario.insertOne(
{
    user_id: "54548546T",
    role: "Cliente",
    nombre: "Radhika",
    apellido: "Sharma",
    direccion: {
        calle: "av meridiana",
        numero: 158,
        ciudad: "Barcelona",
        codigoPostal: 08028
        },
    email: "radhika_sharma.123@gmail.com",
    contraseña: "fet453tfwer"
})

> db.cliente.insertOne(
{
    cliente_id: "54548546T", 
    nombre: "Radhika", 
    apellido: "Sharma",
    direccion: {
        calle: meridiana, 
        numero: 158, ciudad: 
        Barcelona, 
        codigoPostal: 08028
        },
    email: "radhika_sharma.123@gmail.com",
    metodoDePago:{
        tarjeta:{
        nombreDelTitular: "Radhika Sharma",
        numeroTarjeta: 3548945523,
        cvn: 587
        },
    paypal: {”email”: "radhika_sharma.123@gmail.com"}
    }
})

Query #2
    El cliente puede modificar sus datos:

> db.usuario.updateOne(
    {user_id: 54548546T},
    {$set: {"email": "radhika123@gmail.com"}}
)

> db.cliente.updateOne(
    {cliente_id: 54548546T},
    {$set: {"email": "radhika123@gmail.com"}}
)

Query #3
    El cliente puede darse de baja de la aplicacion:

> db.usuario.deleteOne(
    {user_id: 54548546T}
)
 
> db.cliente.deleteOne(
    {cliente_id: 54548546T},
)

Querry #4
	El cliente puede ver los servicios contratados

> db.servicios.find(
	{cliente_id: 54548546}
)

Query #5
	El cliente puede cancelar servicios.

> db.servicio.deleteOne(
    {servicio_id: "S21561"},
)

Query #6
    Un transportista puede registrarse en la aplicacion:
    
> db.usuario.insertOne(
{
	user_id: 45657846K,
	nombre: "Sebastian",
	apellido: "Forero",
	direccion: {
        calle: "av diagonal",
        numero: 186,
        ciudad: Barcelona,
        codigoPostal:08030
    },
    email: "sebas_forero.123@gmail.com",
	contraseña: "ui4ndf53tfwer",
})

> db.transportista.insertOne(
{
	transportista_id: 45657846K,
	nombre: "Sebastian",
	apellido: "Forero",
	email: "sebas_forero.123@gmail.com",
	direccion: {
        calle: "av diagonal",
        numero: 186,
        ciudad: Barcelona,
        codigoPostal:08030
    }
    disponibilidad: true,
    vehiculo: {
        "capacidadMetrosCubicos": 40,
        "tipo": {
            "camion": true,
            "furgoneta": false,
            "coche": false
        }
    },
    zonas: [
            {
                "Barcelona": true
            }
        ],
    tarifas: {
        "precioCamion": "",
        "precioFurgoneta": "",
        "precioCoche": "",
        "precioExtras": {
            "precioAyudantes": "",
            "precioCarretilla": ""
        }
    },
    metodoDeCobro: {
        "nombreDelTitular": "Sebastian Forero",
        "iban": "ES785421313545213256"
    },
    mediaValoraciones: ""
    })


Query #7
	El transportista puede modificar sus datos:

> db.usuario.updateOne(
    {user_id: "45657846K"},
    {$set: {"email": "sebastian123@gmail.com"}}
)

> db.transportista.updateOne(
    {transportista_id: "45657846K"},
    {$set: {"email": "sebastian123@gmail.com"}}
)

Query #8
	El transportista puede darse de baja de la aplicación:

> db.transportista.deleteOne(
    {transportista_id: "45657846K"},
)

> db.usuario.deleteOne(
    {user_id: "45657846K"},
)

Querry #9
	El transportista puede ver los servicios a realizar:

> db.servicios.find(
	{transportista_id: "45696532A"}
)

Query #10
    El sistema proporciona una lista de transportistas al usuario ordenados por ranking, según la disponibilidad de transportistas de la zona que más se adecúe a las características solicitadas.

>db.transportista.find({disponibilidad:true}, {_id: 0, transportista_id: 0, email: 0, disponibilidad: 0, zonas: 0, metodoDeCobro: 0}).sort({mediaValoraciones:-1})

Query #11
    El sistema bloquea el transportista.

>db.transportista.updateOne({transportista_id:"63326548T"},{$set:{disponibilidad:false}})